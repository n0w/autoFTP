/************************ REXX *****************************************        
 AUTOR: ANGEL SUAREZ BARCENA MARTIN                                             
                                                                                
 DESCRIPCION:                                                                   
 Modulo de AutoFTP. Procesa una lista local de ficheros remotos                 
para extraer la informacion necesaria y generar el JCL que                      
a su vez generarï¿½ los JCLs de descarga mediante FTP, uno por cada               
fichero.                                                                        
                                                                                
 ULTIMA REVISION: 19/06/2013  
 
 AutoFTP module. Takes a local list of remote files to extract the needed
 information and generate the JCL that will generate by itself the download JCL
 files, one for each input line.
                                                                                
 ARGUMENTOS:                                                                    
                                                                                
 1- IP remota                                                                   
 2- Nombre de usuario                                                           
 3- Password                                                                    
 4- Ruta local donde se encuentra la lista de ficheros remotos a traer          
 5- Ruta de destino final para los ficheros que se traen                        
 6- Identificador unico del proceso                                             
 7- Modo de trabajo: Tablas/Batch(T,B)|Destino(1,2,3)                           
 8- Ruta de trabajo temporal (donde dejara los ficheros de                      
    listado, datos y el JCL generado.      
    
 ARGUMENTS:                                                                    
                                                                                
 1- Remote IP
 2- Username
 3- Password                                                                    
 4- Local path where remote file list is
 5- Final download path
 6- Unique process 
 7- Work mode: Tables/Batch(T,B)|Destination(1,2,3)                           
 8- Temp work path (here we generate listing, data and aux JCL files).
                                                     
                                                                                
********************************************************************/           
PARSE ARG IP LOGIN PASS LOC_LIST DEST_DIR P_ID MODO,                            
          WRK_DIR                                                               
                                                                                
/* Variables, inicializacion entorno, comprobaciones                  */        
/* Variables, enviroment set up, checks                               */
TRACEID      = 'PAZ'                                                            
USER_COMMAND = "USER "LOGIN                                                     
PASS_COMMAND = "PASS "PASS                                                      
CD_COMMAND   = "CWD '"REM_DIR"'"                                                
DIR_COMMAND  = "LIST"                                                           
TMP_COMMAND  = "DIR '"REM_DIR"'"                                                
OPENSTRING   = IP" 21"                                                          
SEQ_JCL      = 0                                                                
                                                                                
/* Llevamos la cuenta del secuencial                                 */
/* Sequential counter                                                */         
ctrSalida = 1                                                                   
                                                                                
/* Separamos la entrada del modo                                     */
/* Input given, we break destination and workmode apart               */         
TABLA_BATCH = SUBSTR(MODO,1,1)                                                  
DEST_MOD = SUBSTR(MODO,2,1)                                                     
                                                                                
XX = MSG('OFF')                                                                 
TRACE OFF                                                                       
                                                                                
/* Borrar por si existen los ficheros temporales                     */
/* Delete temporal files before create them                          */         
ADDRESS TSO "DELETE '"WRK_DIR".DATOS'"                                          
ADDRESS TSO "DELETE xxx.xxx.xxx.PARAM"                                      
ADDRESS TSO "DELETE '"WRK_DIR".JCL'"                                            
                                                                                
/* Allocate temporal files                                           */    
                                                                                
"ALLOC F(XXX) SPACE(25,50) TRACK LRECL(080) DSORG(PO) RECFM(F B A) ",           
"DA('"WRK_DIR".SAL') BLKSIZE(32720)      REU        ",                          
"DSNTYPE(LIBRARY)                                                  "            
"FREE F(XXX)"                                                                   
                                                                                
"ALLOC F(XXX) SPACE(25,50) TRACK LRECL(080) DSORG(PO) RECFM(F B A) ",           
"DA('"WRK_DIR".SUB') BLKSIZE(32720)      REU        ",                          
"DSNTYPE(LIBRARY)                                                  "            
"FREE F(XXX)"                                                                   
                                                                                
/* Establecer conexion al FTP                                        */
/* Set FTP connection up                                             */         
XX = INICIALIZA_FTP()                                                           
                                                                                
/* Abrir fichero local y cargar en stem IN                           */
/* Open and load local file in stem IN                               */         
"ALLOC F(IN) DS('"LOC_LIST"') SHR"                                              
"EXECIO * DISKR IN (FINIS STEM IN."                                             
"FREE F(IN)"                                                                    
                                                                                
/* Por cada linea del fichero de entrada...                          */
/* For each input file line                                          */         
DO M = 1 TO IN.0                                                                
   SAY "- Procesando archivo "M" de "IN.0"..."                                  
                                                                                
   ORIGEN = SPACE(WORD(IN.M,1))                                                 
                                                                                
   /* Comprobamos si nos dan el destino                              */
   /* Check if destination is passed as argument                     */                                      
   IF WORD(IN.M,2) = '' THEN                                                    
      DO                                                                        
         DESTAUX = TRANSLATE(ORIGEN, " ", ".")                                  
         DESTINO = "ISB"                                                        
                                                                                
         DO J=2 TO WORDS(DESTAUX)                                               
            DESTINO = DESTINO||"."WORD(DESTAUX,J)                               
         END                                                                    
      END                                                                       
   ELSE                                                                         
      DO                                                                        
         DESTINO = WORD(IN.M,2)                                                 
      END                                                                       
                                                                                
   /* Extraer ruta y dsname */
   /* Extract path and dsname */                                                  
   lPOS = LASTPOS('.', ORIGEN)                                                  
   IF lPOS > 1 THEN                                                             
      DO                                                                        
         PATH = LEFT(ORIGEN, lPOS-1)                                            
         rDSNAME = RIGHT(ORIGEN,LENGTH(ORIGEN) - lPOS)                          
      END                                                                       
   ELSE                                                                         
      DO                                                                        
         SAY "[e] Entrada mal formateada."                                      
         LEAVE                                                                  
      END                                                                       
                                                                                
   IF ftpapi('fcai.', 'scmd',"DIR '"ORIGEN"'", 'W') < 0 THEN DO                 
      SAY "[e] Directorio remoto vacio o incorrecto"                            
      CALL ftp_error 'fcai.'                                                    
   END                                                                          
                                                                                
   /* Asigna el resultado del DIR al stem listado */
   /* Copy directory listing to listado stem */                            
   IF ftpapi('fcai.', 'getl_copy', 'listado.', 'L') < 0 THEN DO                 
      CALL ftp_error 'fcai.'                                                    
   END                                                                          
                                                                                
   /* 0 - num. lineas; 1 - cabecera; 2 - dato                      */
   /* 0 - line counter; 1 - header; 2 - data                      */           
   TEMP    = SPACE(listado.2)                                                   
                                                                                
   lVol    = WORD(TEMP,1)                                                       
   lUnit   = WORD(TEMP,2)                                                       
   lRefer  = WORD(TEMP,3)                                                       
   lExt    = WORD(TEMP,4)                                                       
   lUsed   = WORD(TEMP,5)                                                       
   lRecFM  = WORD(TEMP,6)                                                       
   lRecL   = WORD(TEMP,7)                                                       
   lBlkSz  = WORD(TEMP,8)                                                       
   lDSOrg  = WORD(TEMP,9)                                                       
   lDSName = WORD(TEMP,10)                                                      
                                                                                
   IF TABLA_BATCH ='T' THEN                                                     
      id = SUBSTR(rDSNAME,4,5)                                                  
   ELSE                                                                         
      id = RIGHT(ctrSalida,5,'0')                                               
                                                                                
   XX = GENERAR_SEQ()                                                           
                                                                                
   sSal.ctrSalida = P_ID" "id" "LEFT(rDSNAME,8," "),                            
         " "LEFT(ORIGEN,65," "),                                                
         " "lVol" "lUnit" "lRefer" "RIGHT(lExt,3," "),                          
         " "RIGHT(lUsed,4," ")" "lRecFM" "RIGHT(lRecL,5," "),                   
         " "RIGHT(lBlkSz,8," ")" "lDSOrg" "SPACE(DESTINO,0),                    
         " "SEQ_JCL                                                             
                                                                                
   ctrSalida = ctrSalida +1 /* Termina con uno mas */   
                            /* It ends up with one more */
END /* Bucle que recorre la lista de ficheros local */  
    /* Iterates local list */
                                                                                
/* Escribimos el contenido del stem a disco */
/* Write stem data to disk                  */ 
"ALLOCATE FI(FDAT) DA('"WRK_DIR".DATOS') NEW TRACKS",                           
"SPACE(5,5) DIR(0) DSORG(PS) RECFM(F,B) LRECL(200) BLKSIZE(0)"                  
"EXECIO "ctrSalida - 1" DISKW FDAT (STEM sSal."                                 
"EXECIO 0 DISKW FDAT (FINIS"                                                    
"FREE F(FDAT)"                                                                  
                                                                                
/* Generamos el archivo de parametros de conexion */
/* Generate connection params file */                            
XX = GENERAR_PARAMETROS()                                                       
                                                                                
/* Generamos el JCL que llama a modelizC */                                     
/* Generate file-tailoring JCL */ 
XX = GENERAR_JCL()                                                              
                                                                                
/* Informamos al servidor de que nos vamos                           */
/* Tell server we're leaving                                         */         
IF ftpapi('fcai.', 'scmd', 'QUIT', 'W') < 0 THEN DO                             
   CALL ftp_error 'fcai.'                                                       
END                                                                             
                                                                                
/* Cerramos la API                                                   */
/* Close API                                                         */         
IF ftpapi('fcai.', 'term') < 0 THEN DO                                          
   SAY "Unexpected error on ftpapi('term')"                                     
   EXIT -1                                                                      
END                                                                             
                                                                                
/* ctrSalida se inicializa a 1. Se le resta 1 entonces al imprimir   */
/* Substract 1 from ctrSalida because it's initialized to 1          */           
SAY ""                                                                          
SAY "- Terminado! "ctrSalida-1" archivo(s) en listado"                          
SAY ""                                                                          
SAY ">  JCL generado en "WRK_DIR".JCL"                                          
SAY ">  REPFILES generado en "WRK_DIR".DATOS"                                   
SAY ">  PARAMETROS generado en xxx.xxx.xxx.PARAM"                           
SAY "Pulse intro para salir..."                                                 
                                                                                
EXIT                                                                            
                                                                                
/**********************************************************************         
 INICIALIZA_FTP - Inicializa la API y se conecta al servidor remoto 
                - Initializes API and connects to remote server
***********************************************************************/        
INICIALIZA_FTP:                                                                 
/* Inicializa el stem que utiliza la API - PASO 1 (CREATE)           */
/* Initializes stem used by ReXX FTP API - STEP 1 (CREATE)           */         
IF ftpapi('fcai.', 'create', TRACEID) < 0 THEN DO                               
   SAY '[e] Error FTPAPI paso: CREATE'                                          
   EXIT -1                                                                      
END                                                                             
                                                                                
/* Trace debug on (sysout)                                           */         
IF ftpapi('fcai.', 'set_trace', 'Off') < 0 THEN DO                              
   CALL ftp_error 'fcai.'                                                       
END                                                                             
                                                                                
/* Inicializa entorno y abre conexion.   - PASO 2 (INIT)             */
/* Initialize envirment and open connection - STEP 2 (INIT)          */         
IF ftpapi('fcai.','init','-w 300 'OPENSTRING) < 0 THEN DO                       
   CALL ftp_error 'fcai.'                                                       
END                                                                             
SAY "[FTP] Conexion establecida"                                                
                                                                                
/* User                                                              */         
IF ftpapi('fcai.', 'scmd', USER_COMMAND, 'W') < 0 THEN DO                       
   CALL ftp_error 'fcai.'                                                       
END                                                                             
SAY "[FTP] Usuario aceptado"                                                    
                                                                                
/* Password                                                          */         
IF fcai.FCAI_Result = FCAI_RESULT_PROMPTPASS THEN DO                            
   IF ftpapi('fcai.', 'scmd', PASS_COMMAND, 'W') < 0 THEN DO                    
      SAY "[e] Password incorrecta"                                             
      CALL ftp_error 'fcai.'                                                    
   END                                                                          
END                                                                             
SAY "[FTP] Password aceptada"                                                   
SAY ""                                                                          
                                                                                
RETURN 0                                                                        
                                                                                
/**********************************************************************         
 GENERAR_SEQ - Genera el numero de secuencia que tomara cada JCL FTP-GET        
 en el rango 1 - 7  
             - Generates sequence number which every JCL FTP-GET file 
 will take in range 1 - 7
         
***********************************************************************/        
GENERAR_SEQ:                                                                    
   IF SEQ_JCL > 6 THEN SEQ_JCL = 1                                              
   ELSE SEQ_JCL = SEQ_JCL + 1                                                   
                                                                                
   RETURN 0                                                                     
/**********************************************************************         
 GENERAR_JCL - Genera el JCL con la informacion necesaria para llamar           
 a modelizC     
             - Generates JCL file with needed info to call file tailoring
             executable
***********************************************************************/        
GENERAR_JCL:                                                                    
   vUID = USERID()                                                              
   vNOT = ",NOTIFY=&SYSUID"                                                     
                                                                                
   sJCL.0 = 9                                                                   
   sJCL.1 = "//"vUID"FT JOB 202,MSGLEVEL=(1,1),CLASS=S,MSGCLASS=X"vNOT          
   sJCL.2 = "//JCLLIB  JCLLIB ORDER=xxx.xxx.xxx.PROC"                       
   sJCL.3 = "//GENJLC40 EXEC PROC=PRCEXREX"                                     
   sJCL.4 = "//SYSTSIN  DD *"                                                   
   sJCL.5 = " %MODELIZC TIPOPARAMETROS=2                    -"                  
   sJCL.6 = "                  xxx.xxx.xxx(FTPMOJCL)        -"                  
   sJCL.7 = "           "WRK_DIR".DATOS                     -"                  
   sJCL.8 = "           "WRK_DIR".SAL(&01&02)               -"                  
   sJCL.9 = "      OMIT=LIN SUBMIT="WRK_DIR".SUB("P_ID"TODOS)"                  
                                                                                
   "ALLOCATE FI(FJCL) DA('"WRK_DIR".JCL') NEW TRACKS",                          
   "SPACE(5,5) DIR(0) DSORG(PS) RECFM(F,B) LRECL(80) BLKSIZE(0)"                
                                                                                
   "EXECIO "sJCL.0" DISKW FJCL (STEM sJCL."                                     
   "EXECIO 0 DISKW FJCL (FINIS"                                                 
   "FREE F(FJCL)"                                                               
                                                                                
   RETURN 0                                                                     
                                                                                
/**********************************************************************         
 GENERAR_PARAMETROS - Genera el archivo que lleva los parametros de             
 conexion al FTP      
                    - Generates connection parameters file.
***********************************************************************/        
GENERAR_PARAMETROS:                                                             
   sPAR.0 = 5                                                                   
   sPAR.1 = IP"  ( EXIT"                                                        
   sPAR.2 = LOGIN" "PASS                                                        
   sPAR.3 = "CD .."                                                             
   sPAR.4 = "STRUCTURE RECORD"                                                  
   sPAR.5 = "BINARY"                                                            
                                                                                
   "ALLOCATE FI(FPAR) DA('xxx.xxx.xxx.PARAM') NEW TRACKS",                  
   "SPACE(5,5) DIR(0) DSORG(PS) RECFM(F,B) LRECL(80) BLKSIZE(0)"                
   "EXECIO "sPAR.0" DISKW FPAR (STEM sPAR."                                     
   "EXECIO 0 DISKW FPAR (FINIS"                                                 
   "FREE F(FPAR)"                                                               
                                                                                
   RETURN 0                                                                     
                                                                                
/**********************************************************************         
 CREA_LIB - Alloca un PDS   
          - Code snippet to allocate a partitioned data set.
***********************************************************************/        
CREA_LIB:                                                                       
   ARG TARGET                                                                   
                                                                                
   "ALLOC F(XXX) SPACE(25,50) TRACK LRECL(080) DSORG(PO) RECFM(F B A) ",        
   "DA('"TARGET"') BLKSIZE(32720)      REU                            ",        
   "DSNTYPE(LIBRARY)                                                  "         
   "FREE F(XXX)"                                                                
                                                                                
   RETURN 0                                                                     
                                                                                
/**********************************************************************         
 FTP_ERROR - Rutina de manejo y control de errores para la API FTP   
           - Error handling routine for ftp rexx api
***********************************************************************/        
FTP_ERROR: ARG stem                                                             
   SAY'[e] ERROR FTAPI:'                                                        
   SAY'==============='                                                         
   SAY '|-- Result     =' VALUE(stem'FCAI_Result')                              
   SAY '|-- Status     =' VALUE(stem'FCAI_Status')                              
   SAY '|-- IE         =' VALUE(stem'FCAI_IE')                                  
   SAY '|-- CEC        =' VALUE(stem'FCAI_CEC')                                 
   SAY '|-- ReturnCode =' VALUE(stem'FCAI_ReturnCode')                          
   SAY '+-- ReasonCode =' VALUE(stem'FCAI_ReasonCode')                          
                                                                                
   rc = ftpapi('fcai.', 'term')                                                 
                                                                                
   EXIT -1                                                                      
                                                                                
   RETURN                                                                       
